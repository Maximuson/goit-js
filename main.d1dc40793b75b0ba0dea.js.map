{"version":3,"sources":["webpack:///./index.js","webpack:///./ColorSwitcher.js","webpack:///./colors.js","webpack:///./refs.js"],"names":["constructor","colors","refs","this","active","_initButtons","timer","undefined","_setRandomBGC","element","randomNumber","_randomIntegerFromInterval","length","style","backgroundColor","min","max","Math","floor","random","buttons","addEventListener","e","target","classList","contains","dataset","action","start","stop","setAttribute","setInterval","wrapper","removeAttribute","clearInterval","document","querySelector"],"mappings":"mIAKsB,ICLtB,MACEA,YAAYC,EAAQC,GAClBC,KAAKC,QAAS,EACdD,KAAKF,OAASA,EACdE,KAAKD,KAAO,IAAKA,GACjBC,KAAKE,eACLF,KAAKG,WAAQC,EAEfC,cAAcC,EAASR,GACrB,MAAMS,EAAeP,KAAKQ,2BAA2B,EAAGV,EAAOW,QAC/DH,EAAQI,MAAMC,gBAAkBb,EAAOS,GAGzCC,2BAA2BI,EAAKC,GAC9B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGtDV,eACEF,KAAKD,KAAKkB,QAAQC,iBAAiB,QAASC,IACrCA,EAAEC,OAAOC,UAAUC,SAAS,YAGD,UAA5BH,EAAEC,OAAOG,QAAQC,SAClBxB,KAAKC,QAAUD,KAAKyB,QAES,SAA5BN,EAAEC,OAAOG,QAAQC,QACnBxB,KAAK0B,UAKXD,QACEzB,KAAKC,QAAS,EACdD,KAAKD,KAAK0B,MAAME,aAAa,WAAY,QACzC3B,KAAKG,MAAQyB,YAAY,KACvB5B,KAAKK,cAAcL,KAAKD,KAAK8B,QAAS7B,KAAKF,OAAQ,MAClD,KAEL4B,OACE1B,KAAKC,QAAS,EACdD,KAAKD,KAAK0B,MAAMK,gBAAgB,YAChCC,cAAc/B,KAAKG,SCzCR,CACb,UACA,UACA,UACA,UACA,UACA,WCNW,CACXsB,MAAOO,SAASC,cAAc,yBAC9BP,KAAMM,SAASC,cAAc,wBAC7BhB,QAASe,SAASC,cAAc,YAChCJ,QAASG,SAASC,cAAc,gB","file":"main.d1dc40793b75b0ba0dea.js","sourcesContent":["import './styles.css';\nimport refs from './refs';\nimport colors from './colors';\nimport ColorSwitcher from './ColorSwitcher';\n\nconst colorSwitcher = new ColorSwitcher(colors, refs);\n","class ColorSwitcher {\n  constructor(colors, refs) {\n    this.active = false;\n    this.colors = colors;\n    this.refs = { ...refs };\n    this._initButtons();\n    this.timer = undefined;\n  }\n  _setRandomBGC(element, colors) {\n    const randomNumber = this._randomIntegerFromInterval(0, colors.length);\n    element.style.backgroundColor = colors[randomNumber];\n  }\n\n  _randomIntegerFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  _initButtons() {\n    this.refs.buttons.addEventListener('click', e => {\n      if (!e.target.classList.contains('button')) {\n        return undefined;\n      }\n      if (e.target.dataset.action === 'start') {\n        !this.active && this.start();\n      }\n      if (e.target.dataset.action === 'stop') {\n        this.stop();\n      }\n    });\n  }\n\n  start() {\n    this.active = true;\n    this.refs.start.setAttribute('disabled', 'true');\n    this.timer = setInterval(() => {\n      this._setRandomBGC(this.refs.wrapper, this.colors, 1000);\n    }, 1000);\n  }\n  stop() {\n    this.active = false;\n    this.refs.start.removeAttribute('disabled');\n    clearInterval(this.timer);\n  }\n}\nexport default ColorSwitcher;\n","const colors = [\n  '#FFFFFF',\n  '#2196F3',\n  '#4CAF50',\n  '#FF9800',\n  '#009688',\n  '#795548',\n];\nexport default colors;\n","const refs = {\n  start: document.querySelector('[data-action=\"start\"]'),\n  stop: document.querySelector('[data-action=\"stop\"]'),\n  buttons: document.querySelector('.buttons'),\n  wrapper: document.querySelector('.wrapper'),\n};\nexport default refs;\n"],"sourceRoot":""}